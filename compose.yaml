version: "3.9"

name: mini-url-solution

x-logging: &loki-logging
  driver: json-file
  options:
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

services:
  mongo:
    image: mongo:6.0.1
    container_name: mongoMiniURL
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: marketingDB
    ports:
      - "27017:27017"
    expose:
      - "27017"
  redis:
    image: redis:7.2.3-alpine3.18
    container_name: redisMiniURL
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
  sync-mock:
    image: diegosepusoto/distributed-sync-mock:main
    container_name: sync-mock
    logging: *loki-logging
    environment:
      APP_PORT: 8079
    ports:
      - "8079:8079"
    expose:
      - "8079"
  builder-api:
    image: diegosepusoto/mini-url-builder-api:main
    container_name: builderAPI
    restart: always
    logging: *loki-logging
    environment:
      MINI_URLs_HOST: "http://localhost:8081"
      MONGODB_URI: "mongodb://root:password@mongo:27017/marketingDB?authSource=admin"
      SYNC_SERVICE_HOST: "http://sync-mock:8079"
      JWT_TOKEN_SEED: supersecret
      APP_PORT: 8080
      APP_ENV: compose
      APP_VERSION: 0.1
    ports:
      - "8080:8080"
    expose:
      - "8080"
  service:
    image: diegosepusoto/mini-url-service:main
    container_name: service
    logging: *loki-logging
    environment:
      DEFAULT_URL_REDIRECT: https://www.apple.com
      MONGODB_URI: "mongodb://root:password@mongo:27017/marketingDB?authSource=admin"
      JWT_TOKEN_SEED: supersecret
      REDIS_HOST: "redis:6379"
      APP_PORT: 8081
      APP_ENV: compose
      APP_VERSION: 0.1
    ports:
      - "8081:8081"
    expose:
      - "8081"
  loki:
    image: grafana/loki:2.2.1
    container_name: loki
    volumes:
      - ./compose-config/loki-config.yaml:/mnt/config/loki-config.yaml
    command: -config.file=/mnt/config/loki-config.yaml
    ports:
      - 3100:3100
  promtail:
    image: grafana/promtail:2.2.1
    container_name: promtail
    volumes:
      - ./compose-config/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/host/containers
    command: -config.file=/etc/promtail/docker-config.yaml
  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    ports:
      - "9000:9090"
    volumes:
      - ./compose-config/prometheus:/etc/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus-config.yaml
  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    volumes:
      - ./compose-config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./compose-config/grafana-dashboards/dashboard-config.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./compose-config/grafana-dashboards/mini-urls-solution-full-logs.json:/var/lib/grafana/dashboards/mini-urls-solution-full-logs/dashboard.json
      - ./compose-config/grafana-dashboards/mini-urls-usage-details.json:/var/lib/grafana/dashboards/mini-urls-usage-details/dashboard.json
      - ./compose-config/grafana-dashboards/mini-urls-solution-metrics.json:/var/lib/grafana/dashboards/mini-urls-solution-metrics/dashboard.json
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"